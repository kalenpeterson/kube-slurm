---
kind: Secret
apiVersion: v1
metadata:
  name: mysql
stringData:
  database-name: '{{ slurm.database.name }}'
  database-password: '{{ slurm.database.password }}'
  database-root-password: '{{ slurm.database.root_password }}'
  database-user: '{{ slurm.database.user }}'
type: Opaque

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: slurm-config
data:
  slurm.conf: |
    {{ lookup('template', 'templates/slurm.conf.j2') | indent }}
  slurmdbd.conf: |
    {{ lookup('template', 'templates/slurmdbd.conf.j2') | indent }}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  replicas: 1
  serviceName: mysql
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
      annotations:
        ansible.config.update/date: {{ template_run_date }}
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
        node-role.kubernetes.io/master: ""
      containers:
        - name: mysql
          image: {{ slurm.kubernetes.mysql_image }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - MYSQL_PWD="$MYSQL_PASSWORD" mysqladmin -u $MYSQL_USER ping
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: database-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: database-password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: database-root-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql
                  key: database-name
          resources: {}
            # requests:
            #   memory: "4Gi"
            #   cpu: "1000m"
            # limits:
            #   memory: "6Gi"
            #   cpu: "2000m"
          ports:
            - name: mysql
              protocol: TCP
              containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-data
      spec:
        storageClassName: panfs
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slurmdbd
  labels:
    app: slurmdbd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slurmdbd
  template:
    metadata:
      labels:
        app: slurmdbd
      annotations:
        ansible.config.update/date: {{ template_run_date }}
    spec:
      hostname: slurmdbd
      containers:
        # slurmdbd
        - name: slurmdbd
          image: {{ slurm.kubernetes.slurm_image }}
          imagePullPolicy: IfNotPresent
          command: ["/usr/local/bin/docker-entrypoint.sh"]
          args:
            - "slurmdbd"
          # command: ["/bin/sh", "-c"]
          # args:
          #   - "sleep infinity"
          ports:
            - name: slurmdbd
              protocol: TCP
              containerPort: 6819
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6819
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 5
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6819
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /etc/slurm/slurm.conf.injected
              subPath: slurm.conf
              name: slurm-config
            - mountPath: /etc/slurm/slurmdbd.conf.injected
              subPath: slurmdbd.conf
              name: slurm-config
            - mountPath: /var/log/slurm
              name: var-log-slurm
      volumes:
        - name: slurm-config
          configMap:
            name: slurm-config
            defaultMode: 0600
        - name: var-log-slurm
          persistentVolumeClaim:
            claimName: var-log-slurm
        - name: var-lib-slurmd
          persistentVolumeClaim:
            claimName: var-lib-slurmd
        - name: var-spool-slurmd
          persistentVolumeClaim:
            claimName: var-spool-slurmd
      nodeSelector:
        node-role.kubernetes.io/master: ""
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slurmctld
  labels:
    app: slurmctld
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slurmctld
  template:
    metadata:
      labels:
        app: slurmctld
      annotations:
        ansible.config.update/date: {{ template_run_date }}
    spec:
      hostname: slurmctld
      # Host Records for Nodes
      hostAliases:
        - ip: "10.227.209.181"
          hostnames:
            - "nvidia-node01"
      containers:
      #  slurmctld
        - name: slurmctld
          image: {{ slurm.kubernetes.slurm_image }}
          imagePullPolicy: IfNotPresent
          command: ["/usr/local/bin/docker-entrypoint.sh"]
          args:
            - "slurmctld"
          # command: ["/bin/sh", "-c"]
          # args:
          #   - "sleep infinity"
          ports:
            - name: slurmctld
              protocol: TCP
              containerPort: 6817
            - protocol: TCP
              containerPort: 60001
            - protocol: TCP
              containerPort: 60002
            - protocol: TCP
              containerPort: 60003
            - protocol: TCP
              containerPort: 60004
            - protocol: TCP
              containerPort: 60005
            - protocol: TCP
              containerPort: 60006
            - protocol: TCP
              containerPort: 60007
            - protocol: TCP
              containerPort: 60008
            - protocol: TCP
              containerPort: 60009
            - protocol: TCP
              containerPort: 60010
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6817
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 5
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6817
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /etc/slurm/slurm.conf.injected
              subPath: slurm.conf
              name: slurm-config
            - mountPath: /etc/slurm/slurmdbd.conf.injected
              subPath: slurmdbd.conf
              name: slurm-config
            - mountPath: /var/log/slurm
              name: var-log-slurm
            - mountPath: /var/lib/slurmd
              name: var-lib-slurmd
            - mountPath: /var/spool/slurmd
              name: var-spool-slurmd
            - mountPath: /nas
              name: nas
            - mountPath: /etc/passwd
              name: etc
              subPath: passwd
            - mountPath: /etc/group
              name: etc
              subPath: group
            - mountPath: /etc/munge/munge.key
              name: etc
              subPath: munge/munge.key
      volumes:
        - name: slurm-config
          configMap:
            name: slurm-config
            defaultMode: 0600
        - name: var-log-slurm
          persistentVolumeClaim:
            claimName: var-log-slurm
        - name: var-lib-slurmd
          persistentVolumeClaim:
            claimName: var-lib-slurmd
        - name: var-spool-slurmd
          persistentVolumeClaim:
            claimName: var-spool-slurmd
        - name: nas
          hostPath:
            path: /nas
            type: Directory
        - name: etc
          hostPath:
            path: /etc
      nodeSelector:
        node-role.kubernetes.io/master: ""
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slurmd
  labels:
    app: slurmd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slurmd
  template:
    metadata:
      labels:
        app: slurmd
      annotations:
        ansible.config.update/date: {{ template_run_date }}
    spec:
      hostname: slurmd
      containers:
      #  slurmd
        - name: slurmd
          image: {{ slurm.kubernetes.slurm_image }}
          imagePullPolicy: IfNotPresent
          command: ["/usr/local/bin/docker-entrypoint.sh"]
          args:
            - "slurmd"
          #command: ["slurmd"]
          # command: ["/bin/sh", "-c"]
          # args:
          #   - "sleep infinity"
          ports:
            - name: slurmd
              protocol: TCP
              containerPort: 6818
          livenessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6818
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 5
          readinessProbe:
            failureThreshold: 3
            tcpSocket:
              port: 6818
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 5
          volumeMounts:
            - mountPath: /etc/slurm/slurm.conf.injected
              subPath: slurm.conf
              name: slurm-config
            - mountPath: /var/log/slurm
              name: var-log-slurm
            - mountPath: /nas
              name: nas
            - mountPath: /etc/passwd
              name: etc
              subPath: passwd
            - mountPath: /etc/group
              name: etc
              subPath: group
            - mountPath: /etc/munge/munge.key
              name: etc
              subPath: munge/munge.key
      volumes:
        - name: slurm-config
          configMap:
            name: slurm-config
            defaultMode: 0600
        - name: var-log-slurm
          persistentVolumeClaim:
            claimName: var-log-slurm
        # - name: var-lib-slurmd
        #   persistentVolumeClaim:
        #     claimName: var-lib-slurmd
        # - name: var-spool-slurmd
        #   persistentVolumeClaim:
        #     claimName: var-spool-slurmd
        - name: nas
          hostPath:
            path: /nas
            type: Directory
        - name: etc
          hostPath:
            path: /etc
      nodeSelector:
        node-role.kubernetes.io/master: ""
      restartPolicy: Always

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: var-log-slurm
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: panfs
  volumeMode: Filesystem
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: var-lib-slurmd
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: panfs
  volumeMode: Filesystem
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: var-spool-slurmd
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: panfs
  volumeMode: Filesystem
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  type: ClusterIP
  selector:
    app: mysql
  ports:
    - name: mysql
      protocol: TCP
      port: 3306

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-external
  annotations:
    metallb.universe.tf/address-pool: internal-mysql
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
      name: mysql
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: slurmdbd-external
  annotations:
    metallb.universe.tf/address-pool: internal-slurmdbd
spec:
  selector:
    app: slurmdbd
  ports:
    - protocol: TCP
      port: 6819
      targetPort: 6819
      name: slurm-slurmdbd
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: slurmctld-external
  annotations:
    metallb.universe.tf/address-pool: internal-slurmctld
spec:
  selector:
    app: slurmctld
  ports:
    - protocol: TCP
      port: 6817
      targetPort: 6817
      name: slurmctld
    - protocol: TCP
      port: 60001
      targetPort: 60001
      name: srun-60001
    - protocol: TCP
      port: 60002
      targetPort: 60002
      name: srun-60002
    - protocol: TCP
      port: 60003
      targetPort: 60003
      name: srun-60003
    - protocol: TCP
      port: 60004
      targetPort: 60004
      name: srun-600014
    - protocol: TCP
      port: 60005
      targetPort: 60005
      name: srun-60005
    - protocol: TCP
      port: 60006
      targetPort: 60006
      name: srun-60006
    - protocol: TCP
      port: 60007
      targetPort: 60007
      name: srun-60007
    - protocol: TCP
      port: 60008
      targetPort: 60008
      name: srun-60008
    - protocol: TCP
      port: 60009
      targetPort: 60009
      name: srun-60009
    - protocol: TCP
      port: 60010
      targetPort: 60010
      name: srun-60010
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: slurmdbd
spec:
  selector:
    app: slurmdbd
  ports:
    - protocol: TCP
      port: 6819
      targetPort: 6819
      name: slurm-slurmdbd
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: slurmctld
spec:
  selector:
    app: slurmctld
  ports:
    - protocol: TCP
      port: 6817
      targetPort: 6817
      name: slurmctld
    - protocol: TCP
      port: 60001
      targetPort: 60001
      name: srun-60001
    - protocol: TCP
      port: 60002
      targetPort: 60002
      name: srun-60002
    - protocol: TCP
      port: 60003
      targetPort: 60003
      name: srun-60003
    - protocol: TCP
      port: 60004
      targetPort: 60004
      name: srun-600014
    - protocol: TCP
      port: 60005
      targetPort: 60005
      name: srun-60005
    - protocol: TCP
      port: 60006
      targetPort: 60006
      name: srun-60006
    - protocol: TCP
      port: 60007
      targetPort: 60007
      name: srun-60007
    - protocol: TCP
      port: 60008
      targetPort: 60008
      name: srun-60008
    - protocol: TCP
      port: 60009
      targetPort: 60009
      name: srun-60009
    - protocol: TCP
      port: 60010
      targetPort: 60010
      name: srun-60010
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: slurmd
spec:
  selector:
    app: slurmd
  ports:
    - protocol: TCP
      port: 6818
      targetPort: 6818
      name: slurmd
  type: ClusterIP
